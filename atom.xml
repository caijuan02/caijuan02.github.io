<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>蔡娟-爱学习的小前端</title>
  <subtitle>勤能补拙</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://caijuan02.github.io/"/>
  <updated>2017-09-11T12:41:47.725Z</updated>
  <id>https://caijuan02.github.io/</id>
  
  <author>
    <name>蔡娟</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue-router使用</title>
    <link href="https://caijuan02.github.io/2017/09/07/vue-router/"/>
    <id>https://caijuan02.github.io/2017/09/07/vue-router/</id>
    <published>2017-09-07T05:43:39.000Z</published>
    <updated>2017-09-11T12:41:47.725Z</updated>
    
    <content type="html"><![CDATA[<p>在使用vue-router时遇到了一些问题，总结了vue中路由的使用<br><a id="more"></a></p>
<h3 id="一-路由"><a href="#一-路由" class="headerlink" title="一.路由"></a>一.路由</h3><p>1.实现路由切换<br>在index.js中引入各个部分<br>import Header(一般都是首字母大写) from ‘../components/header’<br>第一步：写公共的部分，根据我的项目来说，我把公共的头部就是导航条写在header.vue文件中，在导航条底部要用 router-view 标签来渲染其他内容到这个地方，也就是接下来除了导航条的内容你想写的内容在什么地方，就渲染在什么地方。<br>    {<br>    path:’/‘,    //默认渲染页面<br>    redirect: ‘/chat’,   //重定向，这个页面加载为chat页面，如果不这样进去的页面可能只显示头部，没有内容块<br>    components: Header,  //组件名<br>    name: ‘头部’<br>    }<br>第二步：把导航条切换的各个子页面与导航条实现路由切换，嵌套子路由<br>    {<br>        path: ‘/‘,<br>        component: Header,<br>        name: ‘设置’,<br>        children: [{<br>                path: ‘/setting’,<br>                redirect: ‘/account’, //重定向避免刚打开没点击切换页面出现空白页<br>                component: Setting,<br>                name: “Setting”<br>            }]<br>   }<br>实现路由嵌套后要在页面的元素上添加切换<br>&lt; router-link :to=”{ name: ‘Chat’, params: {}}” &gt;<br>&lt; p &gt;内容&lt; /p &gt;<br>&lt; router-link &gt;<br>如果要嵌套多个路由的话，是类似的道理，在写一层 children</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在使用vue-router时遇到了一些问题，总结了vue中路由的使用&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>vue-cli使用</title>
    <link href="https://caijuan02.github.io/2017/08/30/vue-cli/"/>
    <id>https://caijuan02.github.io/2017/08/30/vue-cli/</id>
    <published>2017-08-30T05:43:39.000Z</published>
    <updated>2017-09-11T13:13:43.052Z</updated>
    
    <content type="html"><![CDATA[<p>在公司的一个项目中用到vue，但是之前又没有接触过vue，所以是一边学习一边用，总结了在这个项目中用到的知识和一些技巧<br><a id="more"></a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装步骤按照  <a href="http://www.jianshu.com/p/1626b8643676" target="_blank" rel="external">http://www.jianshu.com/p/1626b8643676</a>  一步一步来就可以了，我当时安装的时候就漏掉了安装 webpack 导致一直安装出错，还有一个小细节就是语法检测规则，这个我安装的时候也忽略掉了，不要安装，结果在写代码的时候报错，还是同事发现这个小问题给解决的</p>
<h2 id="文件-目前用到的文件"><a href="#文件-目前用到的文件" class="headerlink" title="文件(目前用到的文件)"></a>文件(目前用到的文件)</h2><p>1.index.html展示页面，不需要修改<br>2.main.js挂载App使用，也不需要修改，默认只引入路由，如果用到vuex也是需要在这个文件中引用<br>3.App.vue路由渲染的总页面，可以修改全局样式，可以引入自己写的css<br>4.router目录下的index.js是用来配置路由<br>5.assets是放静态资源的，比如css、js、image<br>6.components目录文件是用来放组件的，可以是自己写的，我是把公共的头部header放在这个目录下了<br>7.page目录文件就是用来放你写的其他页面的vue文件<br>8.在用到veux时可以增加文件夹store</p>
<h2 id="项目中遇到的问题"><a href="#项目中遇到的问题" class="headerlink" title="项目中遇到的问题"></a>项目中遇到的问题</h2><h3 id="一-路由"><a href="#一-路由" class="headerlink" title="一.路由"></a>一.路由</h3><p>1.实现路由切换<br>在index.js中引入各个部分<br>import Header(一般都是首字母大写) from ‘../components/header’<br>第一步：写公共的部分，根据我的项目来说，我把公共的头部就是导航条写在header.vue文件中，在导航条底部要用 router-view 标签来渲染其他内容到这个地方，也就是接下来除了导航条的内容你想写的内容在什么地方，就渲染在什么地方。<br>    {<br>    path:’/‘,    //默认渲染页面<br>    redirect: ‘/chat’,   //重定向，这个页面加载为chat页面，如果不这样进去的页面可能只显示头部，没有内容块<br>    components: Header,  //组件名<br>    name: ‘头部’<br>    }<br>第二步：把导航条切换的各个子页面与导航条实现路由切换，嵌套子路由<br>    {<br>        path: ‘/‘,<br>        component: Header,<br>        name: ‘设置’,<br>        children: [{<br>                path: ‘/setting’,<br>                redirect: ‘/account’, //重定向避免刚打开没点击切换页面出现空白页<br>                component: Setting,<br>                name: “Setting”<br>            }]<br>   }<br>实现路由嵌套后要在页面的元素上添加切换<br>&lt; router-link :to=”{ name: ‘Chat’, params: {}}” &gt;<br>&lt; p &gt;内容&lt; /p &gt;<br>&lt; router-link &gt;<br>如果要嵌套多个路由的话，是类似的道理，在写一层 children</p>
<h3 id="二-小技巧"><a href="#二-小技巧" class="headerlink" title="二.小技巧"></a>二.小技巧</h3><p>1.刷新显示某一页，在App.vue文件的export.default中设置<br>created:function(){<br>    this.$router.replace(‘/chat’)<br>}<br>2.路由激活状态,在路由配置里：linkActiveClass:’active’<br>3.实现路由切换时样式改变，可以利用一个变量取不同的值来实现，<br>:class=”vueConfig.tabType === 1 ? ‘tab_item_selected’ : ‘’ “<br>4.实现数据绑定，使用v-model 文本的长度可以直接使用{ {message.length} }<br>5.可以为一个元素绑定多个事件函数，@click=”click1(),click2()”<br>6.实现文本超过500就不能输入字符<br>watch:{<br>  message() {<br>      if (this.message.length &gt; 500) {<br>          this.message = String(this.message).slice(0,500);}<br>  }<br>},<br>message只能在data的第一级</p>
<h3 id="三-vuex"><a href="#三-vuex" class="headerlink" title="三.vuex"></a>三.vuex</h3><p>1.vuex是类似于插件的使用，首先要安装</p>
<p>2.其实就是引入，在main.js中：<br>import Vuex from ‘vuex’; //vuex引入 状态管理<br>import Store from ‘./store/storeIndex.js’; //vuex引入 状态管理 storeIndex.js文件是自己定义的<br>在storeIndex.js文件中还要引入一次：<br>import Vuex from ‘vuex’; //vuex引入 状态管理<br>在storeIndex.js文件中还要引入的就是每次写的模块的store状态管理文件<br>例如：import config from ‘./modules/config/config’<br>当然可以把所有的状态都写在一个文件里，这里是因为多人合作，写在不同的文件里比较好维护<br>引入所有文件后要输入 Vue.use(Vuex);<br>3.我知道vuex还是因为我的负责人说这个项目使用vuex管理还有数据的使用比较方便，然后我就开始在网上查找vuex的知识，看了好多遍就是看不懂到底是用来干什么的，也看不懂是如何使用的，每次看的都是迷迷糊糊的，但是没办法啊，还是要看，不然这个项目就进行不下去了。。所以又硬着头皮看了几天，终于有点懂了，虽然不是都明白，但是至少不会拖拉这个项目的进度。<br>vuex主要就是4个属性</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在公司的一个项目中用到vue，但是之前又没有接触过vue，所以是一边学习一边用，总结了在这个项目中用到的知识和一些技巧&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>interview</title>
    <link href="https://caijuan02.github.io/2017/08/06/interview/"/>
    <id>https://caijuan02.github.io/2017/08/06/interview/</id>
    <published>2017-08-05T16:00:00.000Z</published>
    <updated>2017-08-06T07:37:44.006Z</updated>
    
    <content type="html"><![CDATA[<p>前端面试总结</p>
<h2 id="html"><a href="#html" class="headerlink" title="html"></a>html</h2><p>1、HTML5新增的标签，对语义化的理解<br><a id="more"></a></p>
<h2 id="css"><a href="#css" class="headerlink" title="css"></a>css</h2><p>1、CSS3的新属性<br>2、盒模型<br>3、实现定宽高和不定宽高的垂直和水平居中<br>4、display设置inline-block 和 block 的区别<br>5、请描述BFC及其如何工作</p>
<h2 id="js"><a href="#js" class="headerlink" title="js"></a>js</h2><p>1、为什么要用时间委托<br>2、同步和异步的区别<br>3、实现tab切换<br>4、this的用法<br>5、call 和 apply 的区别<br>6、原始数据类型和引用数据类型<br>7、数组去重<br>8、求数组中最大值和第二大值<br>9、get 和 post 的区别<br>10、== 和 === 有什么区别<br>11、一句话介绍闭包及如何使用和为什么使用<br>12、了解原型链吗，使用原型链解决过什么问题</p>
<h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><p>1、了解框架实现的原理吗<br>2、如果要实现jQuery中的 .hide 会怎么实现</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>1、XML 和 json 的区别<br>2、查看加载时间慢的原因<br>3、百度工作内容<br>4、百度要开发一个项目的流程<br>5、在开发中遇到哪些浏览器兼容问题，是怎么解决的<br>6、在开发中遇到哪些比较困难的问题，是怎么解决的<br>7、在开发中在移动端适配中遇到哪些坑<br>8、所有的项目中觉得哪个收获最大，学到的东西最多</p>
<h2 id="开放性"><a href="#开放性" class="headerlink" title="开放性"></a>开放性</h2><p>1、为什么要离开百度<br>2、前端知识中最擅长什么<br>3、对自己的职业规划<br>4、后续学习前端会怎么学习</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前端面试总结&lt;/p&gt;
&lt;h2 id=&quot;html&quot;&gt;&lt;a href=&quot;#html&quot; class=&quot;headerlink&quot; title=&quot;html&quot;&gt;&lt;/a&gt;html&lt;/h2&gt;&lt;p&gt;1、HTML5新增的标签，对语义化的理解&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>js动态效果</title>
    <link href="https://caijuan02.github.io/2017/07/14/animation/"/>
    <id>https://caijuan02.github.io/2017/07/14/animation/</id>
    <published>2017-07-14T05:21:00.000Z</published>
    <updated>2017-08-30T01:22:30.406Z</updated>
    
    <content type="html"><![CDATA[<p>自己用css或者js做的动态效果</p>
<p><a href="https://github.com/caijuan02/animation" target="_blank" rel="external">https://github.com/caijuan02/animation</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自己用css或者js做的动态效果&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/caijuan02/animation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/caijuan02/anim
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>学习前端文档</title>
    <link href="https://caijuan02.github.io/2017/07/10/practice/"/>
    <id>https://caijuan02.github.io/2017/07/10/practice/</id>
    <published>2017-07-10T05:43:39.000Z</published>
    <updated>2017-08-30T01:19:59.074Z</updated>
    
    <content type="html"><![CDATA[<p>学习资料整理，主要为前端学习相关资料：包括但不限于HTML、CSS、PHP、JS、SMARTY、JQUERY、ZEPTO、LINUX、GIT、NODEJS等。<br><a id="more"></a></p>
<h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><p>《精通CSS：高级Web标准解决方案》</p>
<h2 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h2><p>1.《JavaScriptDOM编程艺术》</p>
<p>2.《高性能JavaScript》</p>
<p>3.《JavaScript精粹》</p>
<p>4.《jQuery技术内幕》（细致的jquery源码讲解）</p>
<ol>
<li><a href="http://www.wenshuai.cn/Manual/Zepto/" target="_blank" rel="external">http://www.wenshuai.cn/Manual/Zepto/</a> （zepto api中文手册）</li>
</ol>
<h2 id="网络方面"><a href="#网络方面" class="headerlink" title="网络方面"></a>网络方面</h2><p>《Web性能权威指南》</p>
<h2 id="linux系统学习"><a href="#linux系统学习" class="headerlink" title="linux系统学习"></a>linux系统学习</h2><p>1.<a href="http://haoqicat.com/ride-cli-monster" target="_blank" rel="external">http://haoqicat.com/ride-cli-monster</a> 视频资料</p>
<p>2.<a href="http://billie66.github.io/TLCL/book/index.html" target="_blank" rel="external">http://billie66.github.io/TLCL/book/index.html</a> 类似电子书，推荐</p>
<p>3.<a href="http://linuxcommand.org/index.php" target="_blank" rel="external">http://linuxcommand.org/index.php</a></p>
<h2 id="SMARTY"><a href="#SMARTY" class="headerlink" title="SMARTY"></a>SMARTY</h2><p><a href="http://www.php100.com/manual/smarty3/" target="_blank" rel="external">http://www.php100.com/manual/smarty3/</a> smarty中文参考手册3.0</p>
<h2 id="GIT"><a href="#GIT" class="headerlink" title="GIT"></a>GIT</h2><p><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/" target="_blank" rel="external">http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/</a></p>
<h2 id="前端博客推荐"><a href="#前端博客推荐" class="headerlink" title="前端博客推荐"></a>前端博客推荐</h2><p> <a href="https://github.com/FrankFang/best-chinese-front-end-blogs" target="_blank" rel="external">https://github.com/FrankFang/best-chinese-front-end-blogs</a><br> <a href="http://www.w3cplus.com/" target="_blank" rel="external">http://www.w3cplus.com/</a></p>
<h2 id="将本地代码上传到自己的github库中"><a href="#将本地代码上传到自己的github库中" class="headerlink" title="将本地代码上传到自己的github库中"></a>将本地代码上传到自己的github库中</h2><p> <a href="http://www.cnblogs.com/lijiayi/p/pushtogithub.html" target="_blank" rel="external">http://www.cnblogs.com/lijiayi/p/pushtogithub.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习资料整理，主要为前端学习相关资料：包括但不限于HTML、CSS、PHP、JS、SMARTY、JQUERY、ZEPTO、LINUX、GIT、NODEJS等。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>My New Post</title>
    <link href="https://caijuan02.github.io/2017/07/10/My-New-Post/"/>
    <id>https://caijuan02.github.io/2017/07/10/My-New-Post/</id>
    <published>2017-07-10T04:56:39.000Z</published>
    <updated>2017-08-30T01:21:46.365Z</updated>
    
    <content type="html"><![CDATA[<p>This is my first blog，I’m really happy.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><p>1、在本地博客MyBlog目录的source/_posts 目录下修改或者添加 md 后缀的文件， 一个文件是一篇博客<br>2、打开Git bash,达到hexo网站的目录下，进入目录 cd F:   cd MyBlog<br>使用hexo generate 命令产生静态文件<br>3、hexo server,开启hexo服务器，然后到<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 预览网站效果<br>4、hexo deploy,最后同步public目录下的文件到github 上就行啦</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is my first blog，I’m really happy.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://caijuan02.github.io/2017/07/08/hello-world/"/>
    <id>https://caijuan02.github.io/2017/07/08/hello-world/</id>
    <published>2017-07-08T03:32:34.059Z</published>
    <updated>2017-08-06T07:29:46.243Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a>
<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
